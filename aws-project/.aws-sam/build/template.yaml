AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Parameters:
  DevState:
    Type: String
    Default: local
Mappings:
  Images:
    local:
      grader: local-grader
    remote:
      grader: a
Globals:
  Function:
    Timeout: 5
    MemorySize: 512
Resources:
  GraderTriggerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GraderTriggerLambdaFunction
      Handler: app.lambda_handler
      Runtime: python3.11
      Role:
        Fn::GetAtt:
        - GraderRole
        - Arn
      Architectures:
      - x86_64
      Events:
        GithubWebhook:
          Type: Api
          Properties:
            Path: /grade/{id}
            Method: post
      Environment:
        Variables:
          GRADER_DELIVERY_QUEUE_URL:
            Ref: GraderQueue
    Metadata:
      SamResourceId: GraderTriggerLambdaFunction
  GraderImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      CodeUri: functions/grader-function/
      Timeout: 120
      MemorySize: 1024
      ImageConfig:
        Command:
        - lambda_function.handler
      Events:
        GraderQueueTrigger:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - GraderQueue
              - Arn
            BatchSize: 5
            Enabled: true
      Environment:
        Variables:
          CANVAS_API_URL: ''
          CANVAS_API_KEY: ''
          GITHUB_ACCESS_TOKEN: ''
          XDG_DATA_HOME: /tmp/
          DOTNET_CLI_HOME: /tmp/
          DOTNET_CLI_TELEMETRY_OPTOUT: '1'
          NUGET_PACKAGES: /tmp/
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
          DOTNET_RUNNING_IN_CONTAINER: 'true'
      ImageUri: graderimagefunction:v1
    Metadata:
      DockerContext: /home/mitch/github-webhook-listener/aws-project/functions/grader-function
      DockerTag: v1
      Dockerfile: Dockerfile
      SamResourceId: GraderImageFunction
  GraderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: sqs:SendMessage
            Resource:
              Fn::GetAtt:
              - GraderQueue
              - Arn
  GraderQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: grader-delivery-queue
